cmake_minimum_required(VERSION 3.10.2)
project(mpp VERSION 1.0.0 LANGUAGES CXX C)

add_library(libraries_interface INTERFACE)
target_compile_definitions(libraries_interface INTERFACE GLM_FORCE_PURE)
target_compile_options(libraries_interface INTERFACE $<$<CXX_COMPILER_ID:MSVC>:/permissive->)

if(MSVC)
    find_package(glm REQUIRED)
    find_package(glfw3 REQUIRED)
    find_package(spdlog REQUIRED)
    find_package(fmt REQUIRED)
    find_package(Eigen3 REQUIRED)
    target_link_libraries(libraries_interface INTERFACE glfw)
    target_link_libraries(libraries_interface INTERFACE glm)
    target_link_libraries(libraries_interface INTERFACE spdlog::spdlog)
    target_link_libraries(libraries_interface INTERFACE fmt::fmt fmt::fmt-header-only)
    target_link_libraries(libraries_interface INTERFACE Eigen3::Eigen)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
elseif(ANDROID)
    find_library(llog log)
    find_library(ljgfx jnigraphics)
    find_library(legl EGL)
    find_package(openmp REQUIRED)
    target_link_libraries(libraries_interface INTERFACE OpenMP::OpenMP_CXX ${legl} ${ljgfx} ${llog})
    target_compile_definitions(libraries_interface INTERFACE FMT_HEADER_ONLY)
    target_include_directories(libraries_interface INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/libs/include)
    target_compile_definitions(libraries_interface INTERFACE FMT_HEADER_ONLY)
    target_include_directories(libraries_interface INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/android/include)
endif()

add_subdirectory(src)

if(MSVC)
    add_subdirectory(native)
endif()